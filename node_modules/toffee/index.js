// Generated by CoffeeScript 1.6.3
(function() {
  var cacheless_engine, e, engine, getCommonHeaders, getCommonHeadersJs, to_express, view, __express, _ref;

  engine = require('./lib/engine').engine;

  _ref = require('./lib/view'), view = _ref.view, getCommonHeaders = _ref.getCommonHeaders, getCommonHeadersJs = _ref.getCommonHeadersJs;

  exports.engine = engine;

  exports.view = view;

  exports.getCommonHeaders = getCommonHeaders;

  exports.getCommonHeadersJs = getCommonHeadersJs;

  exports.expressEngine = e = new engine({
    verbose: false,
    prettyPrintErrors: true
  });

  exports.render = e.run;

  cacheless_engine = new engine({
    verbose: false,
    prettyPrintErrors: true,
    cache: false
  });

  exports.compileStr = function(template_str, options) {
    var v;
    v = new view(template_str, options);
    return function(x) {
      return v.run(x);
    };
  };

  to_express = exports.toExpress = function(eng) {
    return function(filename, options, cb) {
      return eng.run(filename, options, function(err, res) {
        if (err) {
          if (typeof err === "string") {
            err = new Error(err);
          }
          return cb(err);
        } else {
          return cb(null, res);
        }
      });
    };
  };

  __express = exports.__express = to_express(e);

  exports.__consolidate_engine_render = function(filename, options, cb) {
    var eng;
    eng = options.cache ? e : cacheless_engine;
    return eng.run(filename, options, function(err, res) {
      return cb(err, res);
    });
  };

  exports.str_render = exports.strRender = function(template_str, options, cb) {
    var err, res, v, _ref1;
    v = new view(template_str, options);
    _ref1 = v.run(options), err = _ref1[0], res = _ref1[1];
    return cb(err, res);
  };

  exports.compile = require('./lib/view').expressCompile;

  exports.configurable_compile = function(source, opts) {
    var err, header, output, v;
    opts = opts || {};
    opts.minimize = opts.minimize != null ? opts.minimize : false;
    opts.bundle_path = opts.bundle_path || null;
    opts.headers = opts.headers != null ? opts.headers : true;
    opts.filename = opts.filename || null;
    opts.to_coffee = opts.to_coffee || false;
    err = null;
    v = new view(source, {
      filename: opts.filename,
      bundlePath: opts.filename,
      browserMode: true,
      minimize: opts.minimize
    });
    if (opts.to_coffee) {
      output = v.toCoffee();
    } else {
      output = v.toJavaScript();
    }
    if (v.error) {
      throw v.error.e;
    }
    if (opts.headers) {
      header = getCommonHeadersJs(true, true, true);
      if (opts.coffee) {
        output = "`" + header + "`\n\n" + output;
      } else {
        output = "" + header + "\n;\n" + output;
      }
    }
    return output;
  };

}).call(this);
